import tkinter as tk
from tkinter import filedialog
from PIL import Image, ImageTk
import tensorflow as tf

# Load the pre-trained model
model = tf.keras.models.load_model("your_model.h5")

class ImageClassifierApp(tk.Tk):
    def __init__(self):
        super().__init__()
        self.title("Image Classifier")
        self.geometry("500x500")

        # Create a label to display the image
        self.image_label = tk.Label(self)
        self.image_label.pack(pady=20)

        # Create a button to select an image
        self.select_button = tk.Button(self, text="Select Image", command=self.select_image)
        self.select_button.pack()

        # Create a label to display the prediction
        self.prediction_label = tk.Label(self, text="")
        self.prediction_label.pack()

    def select_image(self):
        file_path = filedialog.askopenfilename()
        if file_path:
            img = Image.open(file_path)
            img = img.resize((224, 224))  # Adjust size as needed
            img = tf.keras.preprocessing.image.img_to_array(img)
            img = img / 255.0
            img = tf.expand_dims(img, axis=0)

            prediction = model.predict(img)
            predicted_class = tf.argmax(prediction, axis=1)

            # Display the image and prediction
            img = ImageTk.PhotoImage(Image.fromarray(img[0].numpy() * 255).astype('uint8'))
            self.image_label.config(image=img)
            self.image_label.image = img
            self.prediction_label.config(text=f"Predicted class: {predicted_class}")

if __name__ == "__main__":
    app = ImageClassifierApp()
    app.mainloop()
